# Starting off with OpenSSL workflow file: We need to build OpenSSL too...

name: Windows tests

on: [pull_request, push]

permissions:
  contents: read

jobs:
  cygwin:
# Run a job for each of the specified target architectures:
    strategy:
      matrix:
        os:
          - windows-2019
#          - windows-2022
        platform:
          - arch: win64
            config: -DOQS_ALGS_ENABLED=STD
#          - arch: win32
#            config: --strict-warnings no-fips enable-quic
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          set-safe-directory: true
          repository: openssl/openssl
          path: openssl
      - uses: actions/checkout@v3
        with:
          set-safe-directory: true
          repository: openquantumsafe/liboqs
          path: liboqs
      - uses: cygwin/cygwin-install-action@master
        with:
          packages: perl git ninja gcc
      - name: Output PWD
        run: echo "PWD = $(pwd)" && ls
      - name: build liboqs
        run: bash -o igncr -c "cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/../.local -S . -B _build && cmake --build _build && cmake --install _build"
        working-directory: liboqs
      - name: build openssl3
        run: bash -o igncr -c "./config --prefix=$(echo $(pwd)/../.local) && make && make install_sw"
        working-directory: openssl
      - name: build oqs-provider
        run: bash -o igncr -c "cmake -DOPENSSL_ROOT_DIR=$(pwd)/.local -DCMAKE_PREFIX_PATH=$(pwd)/.local -S . -B _build && cmake --build _build"
      - name: Run tests
        run: bash -o igncr -c "ctest --test-dir _build"
  msvc:
# Run a job for each of the specified target architectures:
    strategy:
      matrix:
        os:
          - windows-2019
#          - windows-2022
        platform:
          - arch: win64
            oqsconfig: -DOQS_ALGS_ENABLED=STD
#          - arch: win32
#            config: --strict-warnings no-fips enable-quic
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          set-safe-directory: true
          repository: openssl/openssl
          path: openssl
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.platform.arch }}
      - uses: ilammy/setup-nasm@v1
        with:
          platform: ${{ matrix.platform.arch }}
      - uses: shogo82148/actions-setup-perl@v1
      - name: Control setup
        run: |
          dir
          pwd
          dir openssl
      - name: config
        working-directory: openssl\_build
        run: |
          perl ..\Configure --banner=Configured no-makedepend ${{ matrix.platform.config }}
          perl configdata.pm --dump
      - name: build
        working-directory: openssl\_build
        run: nmake /S
      - name: test
        working-directory: openssl\_build
        run: nmake test VERBOSE_FAILURE=yes TESTS=-test_fuzz* HARNESS_JOBS=4
      - name: install
        # Run on 64 bit only as 32 bit is slow enough already
        if: $${{ matrix.platform.arch == 'win64' }}
        run: |
          mkdir _dest
          nmake install DESTDIR=_dest
        working-directory: openssl\_build
      - name: build liboqs
        run: |
          cmake -DCMAKE_INSTALL_PREFIX=$(pwd)/../.local -S . -B _build
          cmake --build _build --parallel
          cmake --install _build
        working-directory: liboqs

