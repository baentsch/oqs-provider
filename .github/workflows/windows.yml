# Starting off with OpenSSL workflow file: We need to build OpenSSL too...

name: Windows tests

on: [pull_request, push]

permissions:
  contents: read

jobs:
  shared:
    # Run a job for each of the specified target architectures:
    strategy:
      matrix:
        os:
          - windows-2019
#          - windows-2022
        platform:
          - arch: win64
            config: enable-fips enable-quic
#          - arch: win32
#            config: --strict-warnings no-fips enable-quic
    runs-on: ${{matrix.os}}
    steps:
    - uses: cygwin/cygwin-install-action@master
#    - uses: ilammy/msvc-dev-cmd@v1
#      with:
#        arch: ${{ matrix.platform.arch }}
#    - uses: ilammy/setup-nasm@v1
#      with:
#        platform: ${{ matrix.platform.arch }}
#    - uses: shogo82148/actions-setup-perl@v1
    - name: prepare CRLF
      run: git config --global core.autocrlf input
    - uses: actions/checkout@v3
    - name: Full build
      run: bash scripts/fullbuild.sh
    - name: Run tests
      run: bash scripts/runtests.sh -V
#    - name: config
#      working-directory: _build
#      run: |
#        perl ..\Configure --banner=Configured no-makedepend ${{ matrix.platform.config }}
#        perl configdata.pm --dump
#    - name: build
#      working-directory: _build
#      run: nmake /S
#    - name: test
#      working-directory: _build
#      run: nmake test VERBOSE_FAILURE=yes TESTS=-test_fuzz* HARNESS_JOBS=4
#    - name: install
#      # Run on 64 bit only as 32 bit is slow enough already
#      if: $${{ matrix.platform.arch == 'win64' }}
#      run: |
#        mkdir _dest
#        nmake install DESTDIR=_dest
#      working-directory: _build

